// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: responses.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseType int32

const (
	ResponseType_UPDATE_GAME ResponseType = 0
)

// Enum value maps for ResponseType.
var (
	ResponseType_name = map[int32]string{
		0: "UPDATE_GAME",
	}
	ResponseType_value = map[string]int32{
		"UPDATE_GAME": 0,
	}
)

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_responses_proto_enumTypes[0].Descriptor()
}

func (ResponseType) Type() protoreflect.EnumType {
	return &file_responses_proto_enumTypes[0]
}

func (x ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseType.Descriptor instead.
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{0}
}

type CardColor int32

const (
	CardColor_White  CardColor = 0
	CardColor_Yellow CardColor = 1
	CardColor_Green  CardColor = 2
	CardColor_Blue   CardColor = 3
	CardColor_Red    CardColor = 4
)

// Enum value maps for CardColor.
var (
	CardColor_name = map[int32]string{
		0: "White",
		1: "Yellow",
		2: "Green",
		3: "Blue",
		4: "Red",
	}
	CardColor_value = map[string]int32{
		"White":  0,
		"Yellow": 1,
		"Green":  2,
		"Blue":   3,
		"Red":    4,
	}
)

func (x CardColor) Enum() *CardColor {
	p := new(CardColor)
	*p = x
	return p
}

func (x CardColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardColor) Descriptor() protoreflect.EnumDescriptor {
	return file_responses_proto_enumTypes[1].Descriptor()
}

func (CardColor) Type() protoreflect.EnumType {
	return &file_responses_proto_enumTypes[1]
}

func (x CardColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardColor.Descriptor instead.
func (CardColor) EnumDescriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{1}
}

type Response struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ResponseType ResponseType           `protobuf:"varint,1,opt,name=response_type,json=responseType,proto3,enum=responses.ResponseType" json:"response_type,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*Response_UpdateGame
	Response      isResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_responses_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetResponseType() ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ResponseType_UPDATE_GAME
}

func (x *Response) GetResponse() isResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Response) GetUpdateGame() *UpdateGameResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_UpdateGame); ok {
			return x.UpdateGame
		}
	}
	return nil
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_UpdateGame struct {
	UpdateGame *UpdateGameResponse `protobuf:"bytes,6,opt,name=update_game,json=updateGame,proto3,oneof"`
}

func (*Response_UpdateGame) isResponse_Response() {}

type UnknownCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           *int32                 `protobuf:"varint,1,opt,name=num,proto3,oneof" json:"num,omitempty"`
	Color         *CardColor             `protobuf:"varint,2,opt,name=color,proto3,enum=responses.CardColor,oneof" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnknownCard) Reset() {
	*x = UnknownCard{}
	mi := &file_responses_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnknownCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownCard) ProtoMessage() {}

func (x *UnknownCard) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownCard.ProtoReflect.Descriptor instead.
func (*UnknownCard) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{1}
}

func (x *UnknownCard) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *UnknownCard) GetColor() CardColor {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return CardColor_White
}

type Card struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           int32                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Color         CardColor              `protobuf:"varint,2,opt,name=color,proto3,enum=responses.CardColor" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card) Reset() {
	*x = Card{}
	mi := &file_responses_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{2}
}

func (x *Card) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Card) GetColor() CardColor {
	if x != nil {
		return x.Color
	}
	return CardColor_White
}

type NotStartedPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Ready         bool                   `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotStartedPlayer) Reset() {
	*x = NotStartedPlayer{}
	mi := &file_responses_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotStartedPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotStartedPlayer) ProtoMessage() {}

func (x *NotStartedPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotStartedPlayer.ProtoReflect.Descriptor instead.
func (*NotStartedPlayer) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{3}
}

func (x *NotStartedPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotStartedPlayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotStartedPlayer) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type StartedPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Cards         []*Card                `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	UnknownCards  []*UnknownCard         `protobuf:"bytes,2,rep,name=unknown_cards,json=unknownCards,proto3" json:"unknown_cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartedPlayer) Reset() {
	*x = StartedPlayer{}
	mi := &file_responses_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartedPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartedPlayer) ProtoMessage() {}

func (x *StartedPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartedPlayer.ProtoReflect.Descriptor instead.
func (*StartedPlayer) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{4}
}

func (x *StartedPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartedPlayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartedPlayer) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *StartedPlayer) GetUnknownCards() []*UnknownCard {
	if x != nil {
		return x.UnknownCards
	}
	return nil
}

type UpdateGameResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Started bool                   `protobuf:"varint,9,opt,name=started,proto3" json:"started,omitempty"`
	// Types that are valid to be assigned to GamePerspective:
	//
	//	*UpdateGameResponse_NotStartedState
	//	*UpdateGameResponse_StartedState
	GamePerspective isUpdateGameResponse_GamePerspective `protobuf_oneof:"game_perspective"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateGameResponse) Reset() {
	*x = UpdateGameResponse{}
	mi := &file_responses_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameResponse) ProtoMessage() {}

func (x *UpdateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameResponse.ProtoReflect.Descriptor instead.
func (*UpdateGameResponse) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateGameResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

func (x *UpdateGameResponse) GetGamePerspective() isUpdateGameResponse_GamePerspective {
	if x != nil {
		return x.GamePerspective
	}
	return nil
}

func (x *UpdateGameResponse) GetNotStartedState() *NotStartedGamePerspective {
	if x != nil {
		if x, ok := x.GamePerspective.(*UpdateGameResponse_NotStartedState); ok {
			return x.NotStartedState
		}
	}
	return nil
}

func (x *UpdateGameResponse) GetStartedState() *StartedGamePerspective {
	if x != nil {
		if x, ok := x.GamePerspective.(*UpdateGameResponse_StartedState); ok {
			return x.StartedState
		}
	}
	return nil
}

type isUpdateGameResponse_GamePerspective interface {
	isUpdateGameResponse_GamePerspective()
}

type UpdateGameResponse_NotStartedState struct {
	NotStartedState *NotStartedGamePerspective `protobuf:"bytes,1,opt,name=not_started_state,json=notStartedState,proto3,oneof"`
}

type UpdateGameResponse_StartedState struct {
	StartedState *StartedGamePerspective `protobuf:"bytes,2,opt,name=started_state,json=startedState,proto3,oneof"`
}

func (*UpdateGameResponse_NotStartedState) isUpdateGameResponse_GamePerspective() {}

func (*UpdateGameResponse_StartedState) isUpdateGameResponse_GamePerspective() {}

type NotStartedGamePerspective struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Ready             bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	NotStartedPlayers []*NotStartedPlayer    `protobuf:"bytes,10,rep,name=not_started_players,json=notStartedPlayers,proto3" json:"not_started_players,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NotStartedGamePerspective) Reset() {
	*x = NotStartedGamePerspective{}
	mi := &file_responses_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotStartedGamePerspective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotStartedGamePerspective) ProtoMessage() {}

func (x *NotStartedGamePerspective) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotStartedGamePerspective.ProtoReflect.Descriptor instead.
func (*NotStartedGamePerspective) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{6}
}

func (x *NotStartedGamePerspective) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *NotStartedGamePerspective) GetNotStartedPlayers() []*NotStartedPlayer {
	if x != nil {
		return x.NotStartedPlayers
	}
	return nil
}

type StartedGamePerspective struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyHand        []*UnknownCard         `protobuf:"bytes,1,rep,name=my_hand,json=myHand,proto3" json:"my_hand,omitempty"`
	OtherHands    []*StartedPlayer       `protobuf:"bytes,2,rep,name=other_hands,json=otherHands,proto3" json:"other_hands,omitempty"`
	Turn          int32                  `protobuf:"varint,3,opt,name=turn,proto3" json:"turn,omitempty"`
	Deck          []*Card                `protobuf:"bytes,4,rep,name=deck,proto3" json:"deck,omitempty"`
	DiscardPile   []*Card                `protobuf:"bytes,5,rep,name=discard_pile,json=discardPile,proto3" json:"discard_pile,omitempty"`
	Hints         int32                  `protobuf:"varint,6,opt,name=hints,proto3" json:"hints,omitempty"`
	Bombs         int32                  `protobuf:"varint,7,opt,name=bombs,proto3" json:"bombs,omitempty"`
	Fireworks     map[int32]int32        `protobuf:"bytes,8,rep,name=fireworks,proto3" json:"fireworks,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // key is CardColor, value is 0-5
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartedGamePerspective) Reset() {
	*x = StartedGamePerspective{}
	mi := &file_responses_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartedGamePerspective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartedGamePerspective) ProtoMessage() {}

func (x *StartedGamePerspective) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartedGamePerspective.ProtoReflect.Descriptor instead.
func (*StartedGamePerspective) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{7}
}

func (x *StartedGamePerspective) GetMyHand() []*UnknownCard {
	if x != nil {
		return x.MyHand
	}
	return nil
}

func (x *StartedGamePerspective) GetOtherHands() []*StartedPlayer {
	if x != nil {
		return x.OtherHands
	}
	return nil
}

func (x *StartedGamePerspective) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *StartedGamePerspective) GetDeck() []*Card {
	if x != nil {
		return x.Deck
	}
	return nil
}

func (x *StartedGamePerspective) GetDiscardPile() []*Card {
	if x != nil {
		return x.DiscardPile
	}
	return nil
}

func (x *StartedGamePerspective) GetHints() int32 {
	if x != nil {
		return x.Hints
	}
	return 0
}

func (x *StartedGamePerspective) GetBombs() int32 {
	if x != nil {
		return x.Bombs
	}
	return 0
}

func (x *StartedGamePerspective) GetFireworks() map[int32]int32 {
	if x != nil {
		return x.Fireworks
	}
	return nil
}

var File_responses_proto protoreflect.FileDescriptor

var file_responses_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x96, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x0b, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x44,
	0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x3b, 0x0a, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0xe0, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x52, 0x0a,
	0x11, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x7e, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x12, 0x4b, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x11, 0x6e, 0x6f,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22,
	0xab, 0x03, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x79,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x06, 0x6d, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x65,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x12,
	0x32, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6d,
	0x62, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x6d, 0x62, 0x73, 0x12,
	0x4e, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a,
	0x3c, 0x0a, 0x0e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x1f, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x2a, 0x40,
	0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x6c, 0x75, 0x65, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x65, 0x64, 0x10, 0x04,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x72, 0x69, 0x63, 0x2d, 0x6d, 0x69, 0x6e, 0x67, 0x32, 0x2f, 0x68, 0x61, 0x6e, 0x61, 0x62, 0x69,
	0x2f, 0x68, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_responses_proto_rawDescOnce sync.Once
	file_responses_proto_rawDescData = file_responses_proto_rawDesc
)

func file_responses_proto_rawDescGZIP() []byte {
	file_responses_proto_rawDescOnce.Do(func() {
		file_responses_proto_rawDescData = protoimpl.X.CompressGZIP(file_responses_proto_rawDescData)
	})
	return file_responses_proto_rawDescData
}

var file_responses_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_responses_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_responses_proto_goTypes = []any{
	(ResponseType)(0),                 // 0: responses.ResponseType
	(CardColor)(0),                    // 1: responses.CardColor
	(*Response)(nil),                  // 2: responses.Response
	(*UnknownCard)(nil),               // 3: responses.UnknownCard
	(*Card)(nil),                      // 4: responses.Card
	(*NotStartedPlayer)(nil),          // 5: responses.NotStartedPlayer
	(*StartedPlayer)(nil),             // 6: responses.StartedPlayer
	(*UpdateGameResponse)(nil),        // 7: responses.UpdateGameResponse
	(*NotStartedGamePerspective)(nil), // 8: responses.NotStartedGamePerspective
	(*StartedGamePerspective)(nil),    // 9: responses.StartedGamePerspective
	nil,                               // 10: responses.StartedGamePerspective.FireworksEntry
}
var file_responses_proto_depIdxs = []int32{
	0,  // 0: responses.Response.response_type:type_name -> responses.ResponseType
	7,  // 1: responses.Response.update_game:type_name -> responses.UpdateGameResponse
	1,  // 2: responses.UnknownCard.color:type_name -> responses.CardColor
	1,  // 3: responses.Card.color:type_name -> responses.CardColor
	4,  // 4: responses.StartedPlayer.cards:type_name -> responses.Card
	3,  // 5: responses.StartedPlayer.unknown_cards:type_name -> responses.UnknownCard
	8,  // 6: responses.UpdateGameResponse.not_started_state:type_name -> responses.NotStartedGamePerspective
	9,  // 7: responses.UpdateGameResponse.started_state:type_name -> responses.StartedGamePerspective
	5,  // 8: responses.NotStartedGamePerspective.not_started_players:type_name -> responses.NotStartedPlayer
	3,  // 9: responses.StartedGamePerspective.my_hand:type_name -> responses.UnknownCard
	6,  // 10: responses.StartedGamePerspective.other_hands:type_name -> responses.StartedPlayer
	4,  // 11: responses.StartedGamePerspective.deck:type_name -> responses.Card
	4,  // 12: responses.StartedGamePerspective.discard_pile:type_name -> responses.Card
	10, // 13: responses.StartedGamePerspective.fireworks:type_name -> responses.StartedGamePerspective.FireworksEntry
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_responses_proto_init() }
func file_responses_proto_init() {
	if File_responses_proto != nil {
		return
	}
	file_responses_proto_msgTypes[0].OneofWrappers = []any{
		(*Response_UpdateGame)(nil),
	}
	file_responses_proto_msgTypes[1].OneofWrappers = []any{}
	file_responses_proto_msgTypes[5].OneofWrappers = []any{
		(*UpdateGameResponse_NotStartedState)(nil),
		(*UpdateGameResponse_StartedState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_responses_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_responses_proto_goTypes,
		DependencyIndexes: file_responses_proto_depIdxs,
		EnumInfos:         file_responses_proto_enumTypes,
		MessageInfos:      file_responses_proto_msgTypes,
	}.Build()
	File_responses_proto = out.File
	file_responses_proto_rawDesc = nil
	file_responses_proto_goTypes = nil
	file_responses_proto_depIdxs = nil
}
